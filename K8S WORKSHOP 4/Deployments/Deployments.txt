1.  Create a deployment called webapp with image nginx with 5 replicas
  a.  Use the below command to create a yaml file.
        kubectl create deploy webapp --image=nginx --dry-run -o yaml > webapp.yaml 
      Edit it and add 5 replicaâ€™s:
        kubectl create deploy webapp -r=5 --image=nginx
2.  Get the deployment rollout status:
      kubectl get deployments -o wide
3.  Get the replicaset that created with this deployment:
      kubectl get replicaset -o wide
4.  EXPORT the yaml of the replicaset and pods of this deployment
      kubectl get replicaset webapp-6684ccd7b8 -o yaml >> Deployment_Export.yaml
      kubectl get pods webapp-6684ccd7b8-7q4zh -o yaml >> webapp-6684ccd7b8-7q4zh.yaml
      kubectl get pods webapp-6684ccd7b8-7rjpj -o yaml >> webapp-6684ccd7b8-7rjpj.yaml
      kubectl get pods webapp-6684ccd7b8-bpdfq -o yaml >> webapp-6684ccd7b8-bpdfq.yaml
      kubectl get pods webapp-6684ccd7b8-dzrdr -o yaml >> webapp-6684ccd7b8-dzrdr.yaml
      kubectl get pods webapp-6684ccd7b8-m5kqs -o yaml >> webapp-6684ccd7b8-m5kqs.yaml
5.  Delete the deployment you just created and watch all the pods are also being deleted:
    kubectl delete deployments webapp
    kubectl get pods
6.  Create a deployment of webapp with image nginx:1.17.1 with container port 80 and verify the image version
  a.    kubectl create deploy webapp --image=nginx:1.17.1 --dry-run -o yaml > webapp.yaml
  b.  add the port section (80) and create the deployment
        kubectl create deploy webapp --image=nginx:1.17.1 --port=80
7.  Update the deployment with the image version 1.17.4 and verify
      kubectl set image deployment/webapp nginx=nginx:1.17.4
      kubectl get deployments webapp -o wide
8.  Check the rollout history and make sure everything is ok after the update
      kubectl rollout history deployment/webapp --revision 2
      kubectl rollout status deployment/webapp
9.  Undo the deployment to the previous version 1.17.1 and verify Image has the previous version
      kubectl rollout undo deployment/webapp --to-revision=1
10. Update the deployment with the wrong image version 1.100 and verify something is wrong with the deployment
  a.  Expect: kubectl get pods (ImagePullErr)
        kubectl set image deployment/webapp nginx=nginx:1.100
        kubectl rollout status deployment/webapp
  b.  Undo the deployment with the previous version and verify everything is Ok
        kubectl rollout history deployment/webapp --revision 2
        kubectl rollout status deployment/webapp
  c.  kubectl rollout history deploy webapp --revision=7
        kubectl rollout history deployment/webapp --revision 7
        kubectl rollout status deployment/webapp
  d.  Check the history of the specific revision of that deployment
        error: unable to find the specified revision
  e.  update the deployment with the image version latest and check the history and verify nothing is going on
        kubectl set image deployment/webapp nginx=nginx:latest
        kubectl rollout status deployment/webapp
11. Apply the autoscaling to this deployment with minimum 10 and maximum 20 replicas and target CPU of 85% and verify hpa is created and replicas are increased to 10 from 1
      kubectl autoscale deployment webapp --cpu-percent=85 --min=10 --max=20
      kubectl get deployment webapp
      NAME     READY   UP-TO-DATE   AVAILABLE   AGE
      webapp   10/10   10           10          59m
12. ???
    TODO:
13. Clean the cluster by deleting deployment and hpa you just created
      kubectl delete hpa webapp
14. Create a job and make it run 10 times one after one (run > exit > run >exit ..) using the following configuration:
    kubectl create job hello-job --image=busybox --dry-run -o yaml --echo "Hello I am from job" > hello-job.yaml
  a. Add to the above job completions: 10 inside the yaml
      added completions: 10 under spec:

